2021-01-27 11:15:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DATABASECHANGELOGLOCK" not found; SQL statement:
SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK [42102-200]
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedByInterruptException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.createParamsKey(ResultSetCache.java:213)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:30)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getTables(JdbcDatabaseSnapshot.java:938)
	at liquibase.snapshot.jvm.TableSnapshotGenerator.snapshotObject(TableSnapshotGenerator.java:33)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedByInterruptException
	at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199)
	at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:388)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 58 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.CatalogAndSchema.standardize(CatalogAndSchema.java:116)
	at liquibase.CatalogAndSchema.customize(CatalogAndSchema.java:138)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$2.fastFetchQuery(JdbcDatabaseSnapshot.java:967)
	at liquibase.snapshot.ResultSetCache$SingleResultSetExtractor.fastFetch(ResultSetCache.java:367)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:72)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getTables(JdbcDatabaseSnapshot.java:938)
	at liquibase.snapshot.jvm.TableSnapshotGenerator.snapshotObject(TableSnapshotGenerator.java:33)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 60 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getTables(JdbcDatabaseSnapshot.java:938)
	at liquibase.snapshot.jvm.TableSnapshotGenerator.snapshotObject(TableSnapshotGenerator.java:33)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 60 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getTables(JdbcDatabaseSnapshot.java:938)
	at liquibase.snapshot.jvm.TableSnapshotGenerator.snapshotObject(TableSnapshotGenerator.java:33)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 60 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.CatalogAndSchema.standardize(CatalogAndSchema.java:116)
	at liquibase.CatalogAndSchema.customize(CatalogAndSchema.java:138)
	at liquibase.database.AbstractJdbcDatabase.getSchemaFromJdbcInfo(AbstractJdbcDatabase.java:1385)
	at liquibase.snapshot.jvm.TableSnapshotGenerator.readTable(TableSnapshotGenerator.java:91)
	at liquibase.snapshot.jvm.TableSnapshotGenerator.snapshotObject(TableSnapshotGenerator.java:37)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 58 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.createParamsKey(ResultSetCache.java:213)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:30)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 46 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.CatalogAndSchema.standardize(CatalogAndSchema.java:116)
	at liquibase.CatalogAndSchema.customize(CatalogAndSchema.java:138)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$GetColumnResultSetCache.fastFetchQuery(JdbcDatabaseSnapshot.java:366)
	at liquibase.snapshot.ResultSetCache$SingleResultSetExtractor.fastFetch(ResultSetCache.java:367)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:72)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:166)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.createParamsKey(ResultSetCache.java:213)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:30)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.CatalogAndSchema.standardize(CatalogAndSchema.java:116)
	at liquibase.CatalogAndSchema.customize(CatalogAndSchema.java:138)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$GetColumnResultSetCache.fastFetchQuery(JdbcDatabaseSnapshot.java:366)
	at liquibase.snapshot.ResultSetCache$SingleResultSetExtractor.fastFetch(ResultSetCache.java:367)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:72)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 51 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.createParamsKey(ResultSetCache.java:213)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:30)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.CatalogAndSchema.standardize(CatalogAndSchema.java:116)
	at liquibase.CatalogAndSchema.customize(CatalogAndSchema.java:138)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$GetColumnResultSetCache.fastFetchQuery(JdbcDatabaseSnapshot.java:366)
	at liquibase.snapshot.ResultSetCache$SingleResultSetExtractor.fastFetch(ResultSetCache.java:367)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:72)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 51 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.createParamsKey(ResultSetCache.java:213)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:30)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.CatalogAndSchema.standardize(CatalogAndSchema.java:116)
	at liquibase.CatalogAndSchema.customize(CatalogAndSchema.java:138)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$GetColumnResultSetCache.fastFetchQuery(JdbcDatabaseSnapshot.java:366)
	at liquibase.snapshot.ResultSetCache$SingleResultSetExtractor.fastFetch(ResultSetCache.java:367)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:72)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 51 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.createParamsKey(ResultSetCache.java:213)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:30)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.CatalogAndSchema.standardize(CatalogAndSchema.java:116)
	at liquibase.CatalogAndSchema.customize(CatalogAndSchema.java:138)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$GetColumnResultSetCache.fastFetchQuery(JdbcDatabaseSnapshot.java:366)
	at liquibase.snapshot.ResultSetCache$SingleResultSetExtractor.fastFetch(ResultSetCache.java:367)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:72)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 51 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.createParamsKey(ResultSetCache.java:213)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:30)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.CatalogAndSchema.standardize(CatalogAndSchema.java:116)
	at liquibase.CatalogAndSchema.customize(CatalogAndSchema.java:138)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$GetColumnResultSetCache.fastFetchQuery(JdbcDatabaseSnapshot.java:366)
	at liquibase.snapshot.ResultSetCache$SingleResultSetExtractor.fastFetch(ResultSetCache.java:367)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:72)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 51 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.createParamsKey(ResultSetCache.java:213)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:30)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.CatalogAndSchema.standardize(CatalogAndSchema.java:116)
	at liquibase.CatalogAndSchema.customize(CatalogAndSchema.java:138)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$GetColumnResultSetCache.fastFetchQuery(JdbcDatabaseSnapshot.java:366)
	at liquibase.snapshot.ResultSetCache$SingleResultSetExtractor.fastFetch(ResultSetCache.java:367)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:72)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 51 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.createParamsKey(ResultSetCache.java:213)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:30)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.CatalogAndSchema.standardize(CatalogAndSchema.java:116)
	at liquibase.CatalogAndSchema.customize(CatalogAndSchema.java:138)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$GetColumnResultSetCache.fastFetchQuery(JdbcDatabaseSnapshot.java:366)
	at liquibase.snapshot.ResultSetCache$SingleResultSetExtractor.fastFetch(ResultSetCache.java:367)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:72)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 51 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.createParamsKey(ResultSetCache.java:213)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:30)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 49 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.CatalogAndSchema.standardize(CatalogAndSchema.java:116)
	at liquibase.CatalogAndSchema.customize(CatalogAndSchema.java:138)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$GetColumnResultSetCache.fastFetchQuery(JdbcDatabaseSnapshot.java:366)
	at liquibase.snapshot.ResultSetCache$SingleResultSetExtractor.fastFetch(ResultSetCache.java:367)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:72)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 51 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:164)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:158)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:206)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:159)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:165)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:150)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:143)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:76)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:301)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.snapshotObject(ColumnSnapshotGenerator.java:81)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:316)
	at liquibase.snapshot.DatabaseSnapshot.replaceObject(DatabaseSnapshot.java:438)
	at liquibase.snapshot.DatabaseSnapshot.includeNestedObjects(DatabaseSnapshot.java:365)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:339)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:107)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:60)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:39)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 52 more
2021-02-03 22:41:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:394)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:148)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:498)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1843)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:737)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:844)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:489)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2085)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2594)
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.supportsMixedCaseIdentifiers(HikariProxyDatabaseMetaData.java)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:715)
	at liquibase.diff.compare.core.DefaultDatabaseObjectComparator.nameMatches(DefaultDatabaseObjectComparator.java:122)
	at liquibase.diff.compare.core.TableComparator.isSameObject(TableComparator.java:35)
	at liquibase.diff.compare.DatabaseObjectComparatorChain.isSameObject(DatabaseObjectComparatorChain.java:50)
	at liquibase.diff.compare.DatabaseObjectComparatorFactory.isSameObject(DatabaseObjectComparatorFactory.java:144)
	at liquibase.structure.DatabaseObjectCollection.get(DatabaseObjectCollection.java:125)
	at liquibase.snapshot.DatabaseSnapshot.get(DatabaseSnapshot.java:542)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:247)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:112)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1226)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 40 more
2021-02-03 22:41:47 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: Writing to nio:/home/kbza/Programacion2/Trabajo Final/target/h2db/db/cinemacenter.mv.db failed; length 4096 at 8192 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.write(MVStore.java:1113)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.tryCommit(MVStore.java:1272)
	at org.h2.mvstore.MVStore.writeInBackground(MVStore.java:2780)
	at org.h2.mvstore.MVStore$BackgroundWriterThread.run(MVStore.java:3290)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.IllegalStateException: Writing to nio:/home/kbza/Programacion2/Trabajo Final/target/h2db/db/cinemacenter.mv.db failed; length 4096 at 8192 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 12 more
Caused by: java.lang.IllegalStateException: Writing to nio:/home/kbza/Programacion2/Trabajo Final/target/h2db/db/cinemacenter.mv.db failed; length 4096 at 8192 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	... 6 more
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:830)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 8 more
2021-02-03 22:41:47 database: close
org.h2.message.DbException: General error: "General error: ""java.lang.IllegalStateException: Writing to nio:/home/kbza/Programacion2/Trabajo Final/target/h2db/db/cinemacenter.mv.db failed; length 4096 at 8192 [1.4.200/2]"" [50000-200]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.engine.Database.throwLastBackgroundException(Database.java:2221)
	at org.h2.engine.Session.close(Session.java:945)
	at org.h2.engine.Database.closeOpenFilesAndUnlock(Database.java:1549)
	at org.h2.engine.Database.closeImpl(Database.java:1454)
	at org.h2.engine.Database.close(Database.java:1373)
	at org.h2.engine.OnExitDatabaseCloser.onShutdown(OnExitDatabaseCloser.java:85)
	at org.h2.engine.OnExitDatabaseCloser.run(OnExitDatabaseCloser.java:114)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "General error: ""java.lang.IllegalStateException: Writing to nio:/home/kbza/Programacion2/Trabajo Final/target/h2db/db/cinemacenter.mv.db failed; length 4096 at 8192 [1.4.200/2]"" [50000-200]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 8 more
Caused by: org.h2.message.DbException: General error: "java.lang.IllegalStateException: Writing to nio:/home/kbza/Programacion2/Trabajo Final/target/h2db/db/cinemacenter.mv.db failed; length 4096 at 8192 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.write(MVStore.java:1113)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1479)
	at org.h2.mvstore.MVStore.store(MVStore.java:1334)
	at org.h2.mvstore.MVStore.store(MVStore.java:1312)
	at org.h2.mvstore.MVStore.tryCommit(MVStore.java:1272)
	at org.h2.mvstore.MVStore.writeInBackground(MVStore.java:2780)
	at org.h2.mvstore.MVStore$BackgroundWriterThread.run(MVStore.java:3290)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.IllegalStateException: Writing to nio:/home/kbza/Programacion2/Trabajo Final/target/h2db/db/cinemacenter.mv.db failed; length 4096 at 8192 [1.4.200/2]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 12 more
Caused by: java.lang.IllegalStateException: Writing to nio:/home/kbza/Programacion2/Trabajo Final/target/h2db/db/cinemacenter.mv.db failed; length 4096 at 8192 [1.4.200/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:479)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:1111)
	... 6 more
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:830)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:475)
	... 8 more
2021-02-03 22:53:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: The database is open in exclusive mode; can not open additional connections [90135-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.engine.Session.checkSuspended(Session.java:1369)
	at org.h2.engine.Session.transitionToState(Session.java:1361)
	at org.h2.engine.Session.setCurrentCommand(Session.java:1343)
	at org.h2.engine.Session.endStatement(Session.java:1887)
	at org.h2.command.Command.executeUpdate(Command.java:285)
	at org.h2.jdbc.JdbcConnection.rollbackInternal(JdbcConnection.java:1530)
	at org.h2.jdbc.JdbcConnection.rollback(JdbcConnection.java:561)
	at com.zaxxer.hikari.pool.ProxyConnection.rollback(ProxyConnection.java:396)
	at com.zaxxer.hikari.pool.HikariProxyConnection.rollback(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:336)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1161)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:298)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:213)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-03 22:53:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1161)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:251)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:213)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-03 22:53:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1161)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:298)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:213)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-03 22:53:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.jvm.JdbcConnection.close(JdbcConnection.java:110)
	at liquibase.database.AbstractJdbcDatabase.close(AbstractJdbcDatabase.java:1208)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:323)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-03 22:55:48 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: The database is open in exclusive mode; can not open additional connections [90135-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.engine.Session.checkSuspended(Session.java:1369)
	at org.h2.engine.Session.transitionToState(Session.java:1361)
	at org.h2.engine.Session.setCurrentCommand(Session.java:1343)
	at org.h2.engine.Session.endStatement(Session.java:1887)
	at org.h2.command.Command.executeUpdate(Command.java:285)
	at org.h2.jdbc.JdbcConnection.rollbackInternal(JdbcConnection.java:1530)
	at org.h2.jdbc.JdbcConnection.rollback(JdbcConnection.java:561)
	at com.zaxxer.hikari.pool.ProxyConnection.rollback(ProxyConnection.java:396)
	at com.zaxxer.hikari.pool.HikariProxyConnection.rollback(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:336)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1161)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:298)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:213)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-03 22:55:48 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1161)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:251)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:213)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-03 22:55:48 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1161)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:298)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:213)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-03 22:55:48 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.jvm.JdbcConnection.close(JdbcConnection.java:110)
	at liquibase.database.AbstractJdbcDatabase.close(AbstractJdbcDatabase.java:1208)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:323)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-15 09:34:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: The database is open in exclusive mode; can not open additional connections [90135-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.engine.Session.checkSuspended(Session.java:1369)
	at org.h2.engine.Session.transitionToState(Session.java:1361)
	at org.h2.engine.Session.waitIfExclusiveModeEnabled(Session.java:1633)
	at org.h2.command.Command.executeUpdate(Command.java:240)
	at org.h2.jdbc.JdbcConnection.rollbackInternal(JdbcConnection.java:1530)
	at org.h2.jdbc.JdbcConnection.rollback(JdbcConnection.java:561)
	at com.zaxxer.hikari.pool.ProxyConnection.rollback(ProxyConnection.java:396)
	at com.zaxxer.hikari.pool.HikariProxyConnection.rollback(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:336)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1161)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:298)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:213)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-15 09:34:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1161)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:251)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:213)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-15 09:34:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1161)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:298)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:213)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-15 09:34:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.jvm.JdbcConnection.close(JdbcConnection.java:110)
	at liquibase.database.AbstractJdbcDatabase.close(AbstractJdbcDatabase.java:1208)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:323)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-15 09:50:45 jdbc[63]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 09:50:45 jdbc[63]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 09:50:45 jdbc[63]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 09:56:50 jdbc[73]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 09:56:50 jdbc[73]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 10:04:39 jdbc[173]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 10:04:39 jdbc[173]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 10:04:39 jdbc[173]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 10:04:39 jdbc[173]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 10:04:39 jdbc[173]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 10:04:39 jdbc[173]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 10:40:29 jdbc[193]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 10:40:29 jdbc[193]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 10:40:29 jdbc[193]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 10:40:29 jdbc[193]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 11:18:14 jdbc[233]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 11:33:36 jdbc[263]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 11:38:27 jdbc[293]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 11:41:46 jdbc[313]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 11:41:46 jdbc[313]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 11:41:46 jdbc[313]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 11:48:52 jdbc[323]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 11:48:52 jdbc[323]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 11:55:06 jdbc[363]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 11:59:51 jdbc[373]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 11:59:51 jdbc[373]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 11:59:51 jdbc[373]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 12:00:24 jdbc[383]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 12:16:48 jdbc[413]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 12:16:48 jdbc[413]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 12:16:48 jdbc[413]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 12:25:25 jdbc[443]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 12:25:25 jdbc[443]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 12:27:16 jdbc[453]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 12:32:01 jdbc[493]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 12:33:48 jdbc[513]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 12:33:48 jdbc[513]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 12:33:48 jdbc[513]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 12:34:11 jdbc[493]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: The database is open in exclusive mode; can not open additional connections [90135-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.engine.Session.checkSuspended(Session.java:1369)
	at org.h2.engine.Session.transitionToState(Session.java:1361)
	at org.h2.engine.Session.setCurrentCommand(Session.java:1343)
	at org.h2.engine.Session.endStatement(Session.java:1887)
	at org.h2.command.Command.executeUpdate(Command.java:285)
	at org.h2.jdbc.JdbcConnection.rollbackInternal(JdbcConnection.java:1530)
	at org.h2.jdbc.JdbcConnection.rollback(JdbcConnection.java:561)
	at com.zaxxer.hikari.pool.ProxyConnection.rollback(ProxyConnection.java:396)
	at com.zaxxer.hikari.pool.HikariProxyConnection.rollback(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:336)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1161)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:298)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:213)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-15 12:34:11 jdbc[503]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: The database is open in exclusive mode; can not open additional connections [90135-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.engine.Session.checkSuspended(Session.java:1369)
	at org.h2.engine.Session.transitionToState(Session.java:1361)
	at org.h2.engine.Session.setCurrentCommand(Session.java:1343)
	at org.h2.engine.Session.endStatement(Session.java:1887)
	at org.h2.command.Command.executeUpdate(Command.java:285)
	at org.h2.jdbc.JdbcConnection.rollbackInternal(JdbcConnection.java:1530)
	at org.h2.jdbc.JdbcConnection.rollback(JdbcConnection.java:561)
	at com.zaxxer.hikari.pool.ProxyConnection.rollback(ProxyConnection.java:396)
	at com.zaxxer.hikari.pool.HikariProxyConnection.rollback(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:336)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1161)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:251)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:213)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-15 12:34:11 jdbc[503]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1161)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:298)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:213)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-15 12:34:11 jdbc[493]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1161)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:251)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:213)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-15 12:34:11 jdbc[503]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.jvm.JdbcConnection.close(JdbcConnection.java:110)
	at liquibase.database.AbstractJdbcDatabase.close(AbstractJdbcDatabase.java:1208)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:323)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-15 12:34:11 jdbc[493]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1161)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:298)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:213)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-15 12:34:11 jdbc[493]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.jvm.JdbcConnection.close(JdbcConnection.java:110)
	at liquibase.database.AbstractJdbcDatabase.close(AbstractJdbcDatabase.java:1208)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:323)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-15 12:34:11 jdbc[513]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1161)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:251)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:213)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-15 12:34:11 jdbc[513]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1161)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:298)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:213)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-15 12:34:11 jdbc[513]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.jvm.JdbcConnection.close(JdbcConnection.java:110)
	at liquibase.database.AbstractJdbcDatabase.close(AbstractJdbcDatabase.java:1208)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:323)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-15 12:40:22 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: The database is open in exclusive mode; can not open additional connections [90135-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.engine.Session.checkSuspended(Session.java:1369)
	at org.h2.engine.Session.transitionToState(Session.java:1361)
	at org.h2.engine.Session.setCurrentCommand(Session.java:1343)
	at org.h2.engine.Session.endStatement(Session.java:1887)
	at org.h2.command.Command.executeQuery(Command.java:227)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:85)
	at com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
	at com.zaxxer.hikari.pool.HikariProxyStatement.executeQuery(HikariProxyStatement.java)
	at liquibase.executor.jvm.JdbcExecutor$QueryStatementCallback.doInStatement(JdbcExecutor.java:465)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:59)
	at liquibase.executor.jvm.JdbcExecutor.query(JdbcExecutor.java:145)
	at liquibase.executor.jvm.JdbcExecutor.query(JdbcExecutor.java:153)
	at liquibase.executor.jvm.JdbcExecutor.queryForObject(JdbcExecutor.java:161)
	at liquibase.executor.jvm.JdbcExecutor.queryForObject(JdbcExecutor.java:176)
	at liquibase.executor.jvm.JdbcExecutor.queryForObject(JdbcExecutor.java:171)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:254)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:213)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-15 12:40:22 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getMetaData(JdbcConnection.java:400)
	at com.zaxxer.hikari.pool.ProxyConnection.getMetaData(ProxyConnection.java:380)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getMetaData(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.getURL(JdbcConnection.java:76)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:70)
	at liquibase.executor.jvm.JdbcExecutor.query(JdbcExecutor.java:145)
	at liquibase.executor.jvm.JdbcExecutor.query(JdbcExecutor.java:153)
	at liquibase.executor.jvm.JdbcExecutor.queryForObject(JdbcExecutor.java:161)
	at liquibase.executor.jvm.JdbcExecutor.queryForObject(JdbcExecutor.java:176)
	at liquibase.executor.jvm.JdbcExecutor.queryForObject(JdbcExecutor.java:171)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:254)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:213)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-15 12:40:22 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1161)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:298)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:213)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-15 12:40:22 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.jvm.JdbcConnection.close(JdbcConnection.java:110)
	at liquibase.database.AbstractJdbcDatabase.close(AbstractJdbcDatabase.java:1208)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:323)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-15 12:47:38 jdbc[43]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 13:08:39 jdbc[73]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 13:08:39 jdbc[73]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 13:08:39 jdbc[73]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:100)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:187)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)

org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 13:08:39 jdbc[73]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 13:08:39 jdbc[73]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:245)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:186)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.afterPropertiesSet(AsyncSpringLiquibase.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:310)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at ar.edu.um.programacion2.cinemacenter.CinemacenterApp.main(CinemacenterApp.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.h2.jdbc.JdbcSQLNonTransientConnectionException: The connection was not closed by the application and is garbage collected [90018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 38 more
2021-02-15 13:21:07 jdbc[93]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: The database is open in exclusive mode; can not open additional connections [90135-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.engine.Session.checkSuspended(Session.java:1369)
	at org.h2.engine.Session.transitionToState(Session.java:1361)
	at org.h2.engine.Session.setCurrentCommand(Session.java:1343)
	at org.h2.engine.Session.endStatement(Session.java:1887)
	at org.h2.command.Command.executeUpdate(Command.java:285)
	at org.h2.jdbc.JdbcConnection.rollbackInternal(JdbcConnection.java:1530)
	at org.h2.jdbc.JdbcConnection.rollback(JdbcConnection.java:561)
	at com.zaxxer.hikari.pool.ProxyConnection.rollback(ProxyConnection.java:396)
	at com.zaxxer.hikari.pool.HikariProxyConnection.rollback(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:336)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1161)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:298)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:213)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-15 13:21:07 jdbc[93]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1161)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:251)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:213)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-15 13:21:07 jdbc[93]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1161)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:298)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:213)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:366)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-15 13:21:07 jdbc[93]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1490)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:516)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.jvm.JdbcConnection.close(JdbcConnection.java:110)
	at liquibase.database.AbstractJdbcDatabase.close(AbstractJdbcDatabase.java:1208)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:323)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
